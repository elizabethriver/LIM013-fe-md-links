[1mdiff --git a/lib/cli.js b/lib/cli.js[m
[1mindex 36234d1..437ae58 100644[m
[1m--- a/lib/cli.js[m
[1m+++ b/lib/cli.js[m
[36m@@ -4,13 +4,16 @@[m [mconst mdLinks = require('./md-links');[m
 const greeting = require("./style.js");[m
 const process = require('process');[m
 const {extractLinks, validateLinks} = require('./util.js');[m
[32m+[m[32mconst totalLinks = require('./stats.js');[m
 [m
 [m
 // TODO Array containing any arguments you passed in[m
 const pathEvaluated = process.argv[2];[m
 console.log(pathEvaluated);[m
[31m-const validateArgv = process.argv.indexOf('--validate') > 0;[m
[32m+[m[32mconst validateArgv = process.argv.indexOf('--validate') >= 0;[m
 console.log(validateArgv);[m
[32m+[m[32mconst statsArgv = process.argv.indexOf('--stats') >= 0;[m
[32m+[m[32mconsole.log(statsArgv);[m
 const pathEvaluatedMsgBoxer = 'The path is: ' + pathEvaluated;[m
 [m
 // TODO style msg to console[m
[36m@@ -19,7 +22,18 @@[m [mgreeting(pathEvaluatedMsgBoxer);[m
 [m
 //TODO cli [m
 [m
[31m-const cli = (route, validate) => {[m
[32m+[m[32mconst cli = (route, validate, stats ) => {[m
[32m+[m[32m    if (stats) {[m
[32m+[m[32m        return mdLinks (route, {stats} )[m
[32m+[m[32m        .then((links) => {[m
[32m+[m[32m            console.log (links + 'links');[m
[32m+[m[32m            totalLinks(links);[m
[32m+[m[32m            console.log('hiciste algo');[m
[32m+[m[32m        })[m
[32m+[m[32m        .catch(() => {[m
[32m+[m[32m            console.log ('links');[m
[32m+[m[32m        })[m
[32m+[m[32m    }[m
     if ( validate ) {[m
         return mdLinks (route, {validate} )[m
         .then((links) => {[m
[36m@@ -30,7 +44,7 @@[m [mconst cli = (route, validate) => {[m
         console.error('Ok');[m
         })[m
     }    [m
[31m-    return mdLinks (route, {validate})[m
[32m+[m[32m    return mdLinks (route)[m
     .then(() => [m
     console.log(extractLinks(route)),[m
     console.log( 'All fine! '))[m
[36m@@ -38,7 +52,19 @@[m [mconst cli = (route, validate) => {[m
     console.error('There was a mistake ');[m
     });[m
 }[m
[31m-cli(pathEvaluated, validateArgv);[m
[31m-[m
[32m+[m[32mcli(pathEvaluated, validateArgv, statsArgv );[m
 [m
 [m
[32m+[m[32m// let newSet = new Set().add(1).add(2).add(1);[m
[32m+[m[32m// console.time();[m
[32m+[m[32m// console.log(newSet);[m
[32m+[m[32m// console.log(newSet.size);[m
[32m+[m[32m// console.timeEnd();[m
[32m+[m[32mlet newSet = new Set([0, 1, 2, 5, 2, 1, 0]);[m
[32m+[m[32mlet uniqueArray = Array.from(new Set(newSet));[m
[32m+[m[32mlet uniqueArray1 = [... new Set(newSet)];[m
[32m+[m[32mconsole.time();[m
[32m+[m[32mconsole.log(newSet);[m
[32m+[m[32mconsole.log(newSet.size);[m
[32m+[m[32mconsole.log(uniqueArray1);[m
[32m+[m[32mconsole.timeEnd();[m
[1mdiff --git a/lib/stats.js b/lib/stats.js[m
[1mindex e69de29..47cad5e 100644[m
[1m--- a/lib/stats.js[m
[1m+++ b/lib/stats.js[m
[36m@@ -0,0 +1,18 @@[m
[32m+[m[32mlet newSet = new Set([0, 1, 2, 5, 2, 1, 0]);[m
[32m+[m[32mconst totalLinks = (links) => {[m
[32m+[m[32m    let uniqueArray = Array.from(new Set(links));[m
[32m+[m[32m    let uniqueArray1 = [... new Set(links)];[m
[32m+[m[32m    console.time();[m
[32m+[m[32m    // console.log(links);[m
[32m+[m[32m    // console.log(links.size);[m
[32m+[m[32m    // console.log(uniqueArray);[m
[32m+[m[32m    // console.log(uniqueArray1);[m
[32m+[m[32m    // console.log(links);[m
[32m+[m[32m    // console.log(links.size);[m
[32m+[m[32m    // console.log(uniqueArray);[m
[32m+[m[32m    // console.log(uniqueArray1);[m
[32m+[m[32m    console.timeEnd();[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m// console.log(totalLinks(newSet));[m
[32m+[m[32mmodule.exports = totalLinks;[m
\ No newline at end of file[m
